{"filter":false,"title":"production.rb","tooltip":"/config/environments/production.rb","undoManager":{"mark":34,"position":34,"stack":[[{"start":{"row":34,"column":42},"end":{"row":35,"column":0},"action":"insert","lines":["",""],"id":25},{"start":{"row":35,"column":0},"end":{"row":35,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":35,"column":2},"end":{"row":36,"column":0},"action":"insert","lines":["config.assets.initialize_on_precompile = false",""],"id":26}],[{"start":{"row":35,"column":48},"end":{"row":36,"column":0},"action":"remove","lines":["",""],"id":27}],[{"start":{"row":36,"column":2},"end":{"row":36,"column":4},"action":"remove","lines":["# "],"id":28}],[{"start":{"row":36,"column":2},"end":{"row":36,"column":4},"action":"insert","lines":["# "],"id":29}],[{"start":{"row":35,"column":43},"end":{"row":35,"column":48},"action":"remove","lines":["false"],"id":30},{"start":{"row":35,"column":43},"end":{"row":35,"column":44},"action":"insert","lines":["t"]}],[{"start":{"row":35,"column":44},"end":{"row":35,"column":45},"action":"insert","lines":["r"],"id":31}],[{"start":{"row":35,"column":45},"end":{"row":35,"column":46},"action":"insert","lines":["u"],"id":32}],[{"start":{"row":35,"column":46},"end":{"row":35,"column":47},"action":"insert","lines":["e"],"id":33}],[{"start":{"row":35,"column":46},"end":{"row":35,"column":47},"action":"remove","lines":["e"],"id":34}],[{"start":{"row":35,"column":45},"end":{"row":35,"column":46},"action":"remove","lines":["u"],"id":35}],[{"start":{"row":35,"column":44},"end":{"row":35,"column":45},"action":"remove","lines":["r"],"id":36}],[{"start":{"row":35,"column":43},"end":{"row":35,"column":44},"action":"remove","lines":["t"],"id":37}],[{"start":{"row":35,"column":43},"end":{"row":35,"column":44},"action":"insert","lines":["f"],"id":38}],[{"start":{"row":35,"column":44},"end":{"row":35,"column":45},"action":"insert","lines":["a"],"id":39}],[{"start":{"row":35,"column":45},"end":{"row":35,"column":46},"action":"insert","lines":["l"],"id":40}],[{"start":{"row":35,"column":46},"end":{"row":35,"column":47},"action":"insert","lines":["s"],"id":41}],[{"start":{"row":35,"column":47},"end":{"row":35,"column":48},"action":"insert","lines":["e"],"id":42}],[{"start":{"row":24,"column":40},"end":{"row":24,"column":42},"action":"remove","lines":["  "],"id":43}],[{"start":{"row":24,"column":38},"end":{"row":24,"column":40},"action":"remove","lines":["  "],"id":44}],[{"start":{"row":24,"column":36},"end":{"row":24,"column":38},"action":"remove","lines":["  "],"id":45}],[{"start":{"row":24,"column":44},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":46},{"start":{"row":25,"column":0},"end":{"row":25,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":25,"column":2},"end":{"row":26,"column":0},"action":"insert","lines":["  config.action_controller.perform_caching = true",""],"id":47}],[{"start":{"row":25,"column":2},"end":{"row":25,"column":4},"action":"remove","lines":["  "],"id":48}],[{"start":{"row":25,"column":49},"end":{"row":26,"column":0},"action":"remove","lines":["",""],"id":49}],[{"start":{"row":35,"column":1},"end":{"row":36,"column":0},"action":"insert","lines":["",""],"id":50},{"start":{"row":36,"column":0},"end":{"row":36,"column":1},"action":"insert","lines":[" "]}],[{"start":{"row":35,"column":1},"end":{"row":36,"column":0},"action":"insert","lines":["onfig.public_file_server.enabled = ENV['RAILS_SERVE_STATIC_FILES'].present?",""],"id":51}],[{"start":{"row":35,"column":1},"end":{"row":35,"column":2},"action":"insert","lines":["c"],"id":52}],[{"start":{"row":35,"column":1},"end":{"row":35,"column":2},"action":"insert","lines":[" "],"id":53}],[{"start":{"row":39,"column":0},"end":{"row":40,"column":0},"action":"remove","lines":["  # config.serve_static_files = ENV['RAILS_SERVE_STATIC_FILES'].present?",""],"id":54}],[{"start":{"row":37,"column":2},"end":{"row":37,"column":4},"action":"insert","lines":["# "],"id":55}],[{"start":{"row":38,"column":2},"end":{"row":38,"column":4},"action":"insert","lines":["# "],"id":56}],[{"start":{"row":24,"column":37},"end":{"row":24,"column":43},"action":"insert","lines":["      "],"id":57,"ignore":true},{"start":{"row":24,"column":49},"end":{"row":25,"column":48},"action":"remove","lines":["e","  config.action_controller.perform_caching = tru"]},{"start":{"row":34,"column":37},"end":{"row":35,"column":31},"action":"insert","lines":[" true","  # config.serve_static_files ="]},{"start":{"row":37,"column":0},"end":{"row":40,"column":0},"action":"remove","lines":["  # config.public_file_server.enabled = true","  # config.assets.initialize_on_precompile = false","",""]}],[{"start":{"row":24,"column":37},"end":{"row":24,"column":43},"action":"remove","lines":["      "],"id":58,"ignore":true},{"start":{"row":24,"column":43},"end":{"row":25,"column":48},"action":"insert","lines":["e","  config.action_controller.perform_caching = tru"]},{"start":{"row":35,"column":37},"end":{"row":36,"column":31},"action":"remove","lines":[" true","  # config.serve_static_files ="]},{"start":{"row":37,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["  # config.public_file_server.enabled = true","  # config.assets.initialize_on_precompile = false","",""]}],[{"start":{"row":12,"column":0},"end":{"row":90,"column":48},"action":"remove","lines":["  # Settings specified here will take precedence over those in config/application.rb.","  ","  # Code is not reloaded between requests.","  config.cache_classes = true","","  # Eager load code on boot. This eager loads most of Rails and","  # your application in memory, allowing both threaded web servers","  # and those relying on copy on write to perform better.","  # Rake tasks automatically ignore this option for performance.","  config.eager_load = true","","  # Full error reports are disabled and caching is turned on.","  config.consider_all_requests_local = false","  config.action_controller.perform_caching = true","  ","  # Enable Rack::Cache to put a simple HTTP cache in front of your application","  # Add `rack-cache` to your Gemfile before enabling this.","  # For large-scale production use, consider using a caching reverse proxy like","  # NGINX, varnish or squid.","  # config.action_dispatch.rack_cache = true","","  # Disable serving static files from the `/public` folder by default since","  # Apache or NGINX already handles this.","  config.public_file_server.enabled = ENV['RAILS_SERVE_STATIC_FILES'].present?","","  # config.public_file_server.enabled = true","  # config.assets.initialize_on_precompile = false","","  # Compress JavaScripts and CSS.","  config.assets.js_compressor = :uglifier","  # config.assets.css_compressor = :sass","","  # Do not fallback to assets pipeline if a precompiled asset is missed.","  config.assets.compile = false","","  # Asset digests allow you to set far-future HTTP expiration dates on all assets,","  # yet still be able to expire them through the digest params.","  config.assets.digest = true","","  # `config.assets.precompile` and `config.assets.version` have moved to config/initializers/assets.rb","","  # Specifies the header that your server uses for sending files.","  # config.action_dispatch.x_sendfile_header = 'X-Sendfile' # for Apache","  # config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect' # for NGINX","","  # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.","  # config.force_ssl = true","","  # Use the lowest log level to ensure availability of diagnostic information","  # when problems arise.","  config.log_level = :debug","","  # Prepend all log lines with the following tags.","  config.log_tags = [ :request_id ]","","  # Use a different logger for distributed setups.","  # config.logger = ActiveSupport::TaggedLogging.new(SyslogLogger.new)","","  config.action_mailer.perform_caching = false","","  # Use a different cache store in production.","  # config.cache_store = :mem_cache_store","","  # Enable serving of images, stylesheets, and JavaScripts from an asset server.","  # config.action_controller.asset_host = 'http://assets.example.com'","","  # Ignore bad email addresses and do not raise email delivery errors.","  # Set this to true and configure the email server for immediate delivery to raise delivery errors.","  # config.action_mailer.raise_delivery_errors = false","","  # Enable locale fallbacks for I18n (makes lookups for any locale fall back to","  # the I18n.default_locale when a translation cannot be found).","  config.i18n.fallbacks = true","","  # Send deprecation notices to registered listeners.","  config.active_support.deprecation = :notify","","  # Use default logging formatter so that PID and timestamp are not suppressed.","  config.log_formatter = ::Logger::Formatter.new"],"id":59},{"start":{"row":12,"column":0},"end":{"row":82,"column":48},"action":"insert","lines":["# Settings specified here will take precedence over those in config/application.rb.","","  # Code is not reloaded between requests.","  config.cache_classes = true","","  # Eager load code on boot. This eager loads most of Rails and","  # your application in memory, allowing both threaded web servers","  # and those relying on copy on write to perform better.","  # Rake tasks automatically ignore this option for performance.","  config.eager_load = true","","  # Full error reports are disabled and caching is turned on.","  config.consider_all_requests_local       = false","  config.action_controller.perform_caching = true","","  # Disable serving static files from the `/public` folder by default since","  # Apache or NGINX already handles this.","  config.public_file_server.enabled = ENV['RAILS_SERVE_STATIC_FILES'].present?","","  # Compress JavaScripts and CSS.","  config.assets.js_compressor = :uglifier","  # config.assets.css_compressor = :sass","","  # Do not fallback to assets pipeline if a precompiled asset is missed.","  config.assets.compile = false","","  # `config.assets.precompile` and `config.assets.version` have moved to config/initializers/assets.rb","","  # Enable serving of images, stylesheets, and JavaScripts from an asset server.","  # config.action_controller.asset_host = 'http://assets.example.com'","","  # Specifies the header that your server uses for sending files.","  # config.action_dispatch.x_sendfile_header = 'X-Sendfile' # for Apache","  # config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect' # for NGINX","","  # Mount Action Cable outside main process or domain","  # config.action_cable.mount_path = nil","  # config.action_cable.url = 'wss://example.com/cable'","  # config.action_cable.allowed_request_origins = [ 'http://example.com', /http:\\/\\/example.*/ ]","","  # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.","  # config.force_ssl = true","","  # Use the lowest log level to ensure availability of diagnostic information","  # when problems arise.","  config.log_level = :debug","","  # Prepend all log lines with the following tags.","  config.log_tags = [ :request_id ]","","  # Use a different cache store in production.","  # config.cache_store = :mem_cache_store","","  # Use a real queuing backend for Active Job (and separate queues per environment)","  # config.active_job.queue_adapter     = :resque","  # config.active_job.queue_name_prefix = \"AirPikachu_#{Rails.env}\"","  config.action_mailer.perform_caching = false","","  # Ignore bad email addresses and do not raise email delivery errors.","  # Set this to true and configure the email server for immediate delivery to raise delivery errors.","  # config.action_mailer.raise_delivery_errors = false","","  # Enable locale fallbacks for I18n (makes lookups for any locale fall back to","  # the I18n.default_locale when a translation cannot be found).","  config.i18n.fallbacks = true","","  # Send deprecation notices to registered listeners.","  config.active_support.deprecation = :notify","","  # Use default logging formatter so that PID and timestamp are not suppressed.","  config.log_formatter = ::Logger::Formatter.new"]}]]},"ace":{"folds":[],"scrolltop":1126,"scrollleft":0,"selection":{"start":{"row":82,"column":48},"end":{"row":82,"column":48},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":69,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1523852448223,"hash":"edcd09cd97b611b2c9679030a17b07caad434dcb"}