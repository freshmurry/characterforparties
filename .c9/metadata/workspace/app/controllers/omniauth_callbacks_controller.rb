{"filter":false,"title":"omniauth_callbacks_controller.rb","tooltip":"/app/controllers/omniauth_callbacks_controller.rb","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":49,"column":3},"action":"remove","lines":["class OmniauthCallbacksController < Devise::OmniauthCallbacksController","  def facebook","    # You need to implement the method below in your model (e.g. app/models/user.rb)","    @user = User.from_omniauth(request.env[\"omniauth.auth\"])","","    if @user.persisted?","      sign_in_and_redirect @user, :event => :authentication #this will throw if @user is not activated","      set_flash_message(:notice, :success, :kind => \"Facebook\") if is_navigational_format?","    else","      session[\"devise.facebook_data\"] = request.env[\"omniauth.auth\"]","      redirect_to new_user_registration_url","    end","  end","","  def stripe_connect","    auth_data = request.env[\"omniauth.auth\"]","    @user = current_user","","    if @user.persisted?","      @user.merchant_id = auth_data.uid","      @user.save","","      if !@user.merchant_id.blank?","","        # Update Payout Schedule","        account = Stripe::Account.retrieve(current_user.merchant_id)","        account.payout_schedule.delay_days = 7","        account.payout_schedule.interval = \"daily\"","","        # account.payout_schedule.monthly_anchor = 15","        # account.payout_schedule.interval = \"monthly\"","","        account.save","","        logger.debug \"#{account}\"","      end","      ","      sign_in_and_redirect @user, event: :authentication","      flash[:notice] = \"Stripe Account Created and Connected\" if is_navigational_format?","","    else","      session[\"devise.stripe_connect_data\"] = request.env[\"omniauth.auth\"]","      redirect_to new_venue_path","    end","  end","","  def failure","    redirect_to root_path","  end","end"],"id":3},{"start":{"row":0,"column":0},"end":{"row":50,"column":0},"action":"insert","lines":["class OmniauthCallbacksController < Devise::OmniauthCallbacksController","  def facebook","    # You need to implement the method below in your model (e.g. app/models/user.rb)","    @user = User.from_omniauth(request.env[\"omniauth.auth\"])","","    if @user.persisted?","      sign_in_and_redirect @user, :event => :authentication #this will throw if @user is not activated","      set_flash_message(:notice, :success, :kind => \"Facebook\") if is_navigational_format?","    else","      session[\"devise.facebook_data\"] = request.env[\"omniauth.auth\"]","      redirect_to new_user_registration_url","    end","  end","","  def stripe_connect","    auth_data = request.env[\"omniauth.auth\"]","    @user = current_user","","    if @user.persisted?","      @user.merchant_id = auth_data.uid","      @user.save","","      if !@user.merchant_id.blank?","","        # Update Payout Schedule","        account = Stripe::Account.retrieve(current_user.merchant_id)","        account.payout_schedule.delay_days = 7","        account.payout_schedule.interval = \"daily\"","","        # account.payout_schedule.monthly_anchor = 15","        # account.payout_schedule.interval = \"monthly\"","","        account.save","","        logger.debug \"#{account}\"","      end","      ","      sign_in_and_redirect @user, event: :authentication","      flash[:notice] = \"Stripe Account Created and Connected\" if is_navigational_format?","","    else","      session[\"devise.stripe_connect_data\"] = request.env[\"omniauth.auth\"]","      redirect_to dashboard_path","    end","  end","","  def failure","    redirect_to root_path","  end","end",""]}],[{"start":{"row":49,"column":3},"end":{"row":50,"column":0},"action":"remove","lines":["",""],"id":4}],[{"start":{"row":16,"column":2},"end":{"row":26,"column":5},"action":"insert","lines":["def facebook","    @user = User.from_omniauth(request.env[\"omniauth.auth\"])","","    if @user.persisted?","      sign_in_and_redirect @user, :event => :authentication","      set_flash_message(:notice, :success, :kind => \"Facebook\") if is_navigational_format?","    else","      session[\"devise.facebook_data\"] = request.env[\"omniauth.auth\"]","      redirect_to new_user_registration_url","    end","  end"],"id":14}],[{"start":{"row":16,"column":2},"end":{"row":16,"column":3},"action":"remove","lines":["√"],"id":13}],[{"start":{"row":16,"column":2},"end":{"row":16,"column":3},"action":"insert","lines":["√"],"id":12}],[{"start":{"row":15,"column":2},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":11},{"start":{"row":16,"column":0},"end":{"row":16,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":14,"column":2},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":10},{"start":{"row":15,"column":0},"end":{"row":15,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":2},"action":"insert","lines":["  "],"id":9}],[{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":8}],[{"start":{"row":15,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":7}],[{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":6}],[{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":5}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":13,"column":0},"end":{"row":13,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1514874618996,"hash":"95a612457adef3dfd1948f238d6f411129f40424"}